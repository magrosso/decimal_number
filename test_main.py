import pytest

from main import shift_decimal_by


@pytest.mark.parametrize(
    "number, dist, expected",
    [
        # no shift
        ("1.23456", 0, "1.23456"),
        ("123456", 0, "123456"),
        (".123456", 0, ".123456"),
        # shift right by one
        ("1.23456", 1, "12.3456"),
        (".123456", 1, "1.23456"),
        ("12345.6", 1, "123456"),
        # shift right > 1
        ("1.23456", 2, "123.456"),
        ("1.23456", 3, "1234.56"),
        ("1.23456", 4, "12345.6"),
        ("1.23456", 5, "123456"),
        ("1.23456", 6, "1234560"),
        ("1.23456", 7, "12345600"),
        # shift left by one
        ("123456", -1, "12345.6"),
        (".123456", -1, ".0123456"),
        # shift right > 1
        ("123456", -2, "1234.56"),
        ("123456", -3, "123.456"),
        ("123456", -4, "12.3456"),
        ("123456", -5, "1.23456"),
        ("123456", -6, ".123456"),
        ("123456", -7, ".0123456"),
        ("123456", -8, ".00123456"),
        # shift left
        (".123456", -2, ".00123456"),
        (".123456", -3, ".000123456"),
    ],
)
def test_move_decimal(number: str, dist: int, expected: str) -> None:
    new_str = shift_decimal_by(orig=number, dist=dist)
    assert new_str == expected
